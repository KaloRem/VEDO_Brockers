{"version":3,"file":"commonHelpers.js","sources":["../src/js/mobile_menu.js","../src/js/scroll_progress.js","../src/js/modalBuy_functionality.js","../src/js/modalRent_functionality.js"],"sourcesContent":["const mobMenuBtn = document.querySelector('.mob_menu_btn');\nconst headerNavList = document.querySelector('.header_nav_list');\n\nmobMenuBtn.addEventListener('click', mobileMenu);\n\nfunction mobileMenu() {\n  mobMenuBtn.classList.toggle('active');\n  headerNavList.classList.toggle('active');\n}\n\nconst navLink = document.querySelectorAll('.header_nav_list_item_link');\n\nnavLink.forEach(n => n.addEventListener('click', closeMenu));\n\nfunction closeMenu() {\n  mobMenuBtn.classList.remove('active');\n  headerNavList.classList.remove('active');\n}\n","window.onscroll = function () {\n  scrollFunction();\n};\n\nfunction scrollFunction() {\n  var elementScroll =\n    document.body.scrollTop || document.documentElement.scrollTop;\n  var windowHeight =\n    document.documentElement.scrollHeight -\n    document.documentElement.clientHeight;\n  var scrollPos = (elementScroll / windowHeight) * 100;\n  document.getElementById('myBar').style.width = scrollPos + '%';\n}\n","// MODAL WINDOW OPEN/CLOSE\nvar modal = document.getElementById('modalBuy');\nvar openBtn = document.getElementById('openBtnBuy');\nvar closeBtn = document.getElementById('closeBtnBuy');\n\n// Store the original overflow value of the body for proper restoration\nvar bodyOverflowStyle;\n\nopenBtn.onclick = function () {\n  modal.style.display = 'block';\n\n  // Prevent body scrolling when modal is open\n  bodyOverflowStyle = document.body.style.overflow;\n  document.body.style.overflow = 'hidden';\n\n  // AT LEAST 1 CHECKBOX ACTIVE\n  var checkboxes = modal.querySelector('input[name=\"option\"]');\n  var submitButton = modal.querySelector('button[type=\"submit\"]');\n\n  // Function to check if at least one checkbox is selected\n  function isAtLeastOneCheckboxSelected() {\n    return Array.from(checkboxes).some(checkbox => checkbox.checked);\n  }\n\n  // Update submit button state based on selection\n  function updateSubmitButton() {\n    submitButton.disabled = !isAtLeastOneCheckboxSelected();\n  }\n\n  // Add event listener to each checkbox for selection changes\n  checkboxes.forEach(checkbox =>\n    checkbox.addEventListener('change', updateSubmitButton)\n  );\n\n  // Call updateSubmitButton initially (in case checkboxes are pre-selected)\n  updateSubmitButton();\n\n  // ADDING OUTLINE WHEN CHECKBOX IS CHECKED\n  // Function to add outline on checkbox check\n  function addOutlineOnCheckboxCheck(checkbox) {\n    const labelElement = checkbox.parentElement; // Get the parent label element\n    labelElement.style.outline = checkbox.checked\n      ? '4px solid var(--main-font-color)'\n      : '';\n    labelElement.style.transition =\n      'outline 100ms cubic-bezier(0.4, 0, 0.2, 1)';\n  }\n\n  // Event listener for checkbox change\n  checkboxes.forEach(checkbox =>\n    checkbox.addEventListener('change', () =>\n      addOutlineOnCheckboxCheck(checkbox)\n    )\n  );\n};\n\ncloseBtn.onclick = function () {\n  modal.style.display = 'none';\n\n  // Restore body scrolling when modal is closed\n  document.body.style.overflow = bodyOverflowStyle;\n};\n\nwindow.onclick = function (event) {\n  if (event.target == modal) {\n    modal.style.display = 'none';\n    document.body.style.overflow = bodyOverflowStyle;\n  }\n};\n","// MODAL WINDOW OPEN/CLOSE\nvar modal = document.getElementById('modalRent');\nvar openBtn = document.getElementById('openBtnRent');\nvar closeBtn = document.getElementById('closeBtnRent');\n\n// Store the original overflow value of the body for proper restoration\nvar bodyOverflowStyle;\n\nopenBtn.onclick = function () {\n  modal.style.display = 'block';\n\n  // Prevent body scrolling when modal is open\n  bodyOverflowStyle = document.body.style.overflow;\n  document.body.style.overflow = 'hidden';\n};\n\ncloseBtn.onclick = function () {\n  modal.style.display = 'none';\n\n  // Restore body scrolling when modal is closed\n  document.body.style.overflow = bodyOverflowStyle;\n};\n\nwindow.onclick = function (event) {\n  if (event.target == modal) {\n    modal.style.display = 'none';\n    document.body.style.overflow = bodyOverflowStyle;\n  }\n};\n\n// AT LEAST 1 CHECKBOX ACTIVE\nvar checkboxes = document.querySelectorAll('input[name=\"option\"]');\nvar submitButton = document.querySelector('button[type=\"submit\"]');\n\n// Function to check if at least one checkbox is selected\nfunction isAtLeastOneCheckboxSelected() {\n  return Array.from(checkboxes).some(checkbox => checkbox.checked);\n}\n\n// Update submit button state based on selection\nfunction updateSubmitButton() {\n  submitButton.disabled = !isAtLeastOneCheckboxSelected();\n}\n\n// Add event listener to each checkbox for selection changes\ncheckboxes.forEach(checkbox =>\n  checkbox.addEventListener('change', updateSubmitButton)\n);\n\n// Call updateSubmitButton initially (in case checkboxes are pre-selected)\nupdateSubmitButton();\n\n// ADDING OUTLINE WHEN CHECKBOX IS CHECKED\n// Function to add outline on checkbox check\nfunction addOutlineOnCheckboxCheck(checkbox) {\n  const labelElement = checkbox.parentElement; // Get the parent label element\n  labelElement.style.outline = checkbox.checked\n    ? '4px solid var(--main-font-color)'\n    : '';\n  labelElement.style.transition = 'outline 100ms cubic-bezier(0.4, 0, 0.2, 1)';\n}\n\n// Event listener for checkbox change\ncheckboxes.forEach(checkbox =>\n  checkbox.addEventListener('change', () => addOutlineOnCheckboxCheck(checkbox))\n);\n"],"names":["mobMenuBtn","headerNavList","mobileMenu","navLink","n","closeMenu","scrollFunction","elementScroll","windowHeight","scrollPos","modal","openBtn","closeBtn","bodyOverflowStyle","checkboxes","submitButton","isAtLeastOneCheckboxSelected","checkbox","updateSubmitButton","addOutlineOnCheckboxCheck","labelElement","event"],"mappings":"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"}